{"meta":{"title":"Peter's Fascinations","subtitle":null,"description":null,"author":"Peter LaValle","url":"http://peterlavalle.com"},"pages":[{"title":"","date":"2017-03-14T09:33:46.672Z","updated":"2017-03-14T09:33:46.672Z","comments":true,"path":"googlede52b41dac0abc2f.html","permalink":"http://peterlavalle.com/googlede52b41dac0abc2f.html","excerpt":"","text":"google-site-verification: googlede52b41dac0abc2f.html"},{"title":"SPACE-SHIPs","date":"2017-03-14T09:33:46.482Z","updated":"2017-03-14T09:33:46.482Z","comments":true,"path":"SPACE-SHIPs/index.html","permalink":"http://peterlavalle.com/SPACE-SHIPs/index.html","excerpt":"","text":"This link goes to my little game with SPACE-SHIPs and lasers. It should work in any WebGL browser. It’s not very robust because … well … sharing it was an afterthought. W-A-S-D along with the arrow keys fly the SPACE-SHIP around. That’s a lie - trying to go backwards does nothing when you’re trying to go forwards you won’t slow down … because when you step on the gas the game removes your inertial drag once you stop pushing forwards - you’ll slow down … so if you’re going sideways, let go of the gas for a moment and you’ll stop then step on it when you’ve stopped the same rules apply to turning spin spin spin! but release the key when you want to stop spinning you can shoot with SPACEBAR LEFT-MOUSE or the LEFT-CONTROL key Have Fun"},{"title":"External Presence","date":"2016-01-19T21:02:03.000Z","updated":"2017-03-14T09:33:46.472Z","comments":true,"path":"External-Presence/index.html","permalink":"http://peterlavalle.com/External-Presence/index.html","excerpt":"","text":"Sometimes I Tweet Often, I program … or grab other people’s work Peter LaValleI am Peter. I work for the University of Nottingham’s Computer Vision Laboratory as a researcher. You can reach me on Twitter or Tumblr unless you know of another way. If you know of another way to reach me - do that! Work UoN iBit (here’s an old page about the project) the goal is to determine if the NHS can replace patching with stereoscopic games and films McGill / UbiSoft are doing something similar Big Fest as a Tools Engineer Cabal Online as a Server Engineer Darkened Skye (GameCube) as a Gameplay Tester The usual “misc” development and testing including; mobile games testing at Absolute Quality Glasgow some web pages while working here a VB front-end to Sage while working here a VLE for Sheffield University’s Archaeology Department Play DukScala is a demonstration of Scala embedded in (Visual) C++ via the Duktape scripting engine old git copy which I’m never going to update Samon - a static template engine (for generating source code) I’m now using Scala’s string iterpolation] … you may preffer Scalate’s SSP templates A Visual Studio plugin to open other tools I wanted to pop open NotePad++ for repetitive text editing CRTL + SHIFT + ALT + O I wanted to commit to TortoiseHg without breaking my “flow” CRTL + SHIFT + ALT + M … there are probably other ways to do these things … Some tools for automating builds pal_cmade palmade which are probably redundant but nobody talks about CMake so I didn’t know LGD ; an abandoned mess of stuff I made during my MSc … for JavaSE and Android A “bone” pure functional shading language A Marching Cubes system written in Scala well … Marching Tetrahedrons A GLSL height map ray-casting imposter … thing (which won me an award!) A silly prototype zombie game called 11hands"},{"title":"Samon Templates","date":"2016-03-12T00:00:00.000Z","updated":"2017-03-14T09:33:46.482Z","comments":true,"path":"Samon-Templates/index.html","permalink":"http://peterlavalle.com/Samon-Templates/index.html","excerpt":"","text":"Samon is the name I’ve given my-very-own static text-template engine. I had been working with Jamon but kept running into obstacles related to my reliance on Scala features. Background(What I call) Text-Template Engines solve a pretty simple problem with to “buts” the problem isn’t “problematic” in simple applications you need some basic programming knowledge before they make sense Confused? Terrified? Let’s say that we have “SomeThing” with a name that’s a String and a count (of sub-things) that’s an Int. Naturally - you’d use a class for this which I’ll express in Scala; class SomeThing ( val name: String, val cout: Int ) You could write the equivalent class as C++ like this; class SomeThing { public: const std::string _name; const int _count; ... } … but that gets looooong and boring. So I’m sticking with Scala. I want to turn instance of this SomeThing into some HTML. (Peter doesn’t care much about HTML, but it’s an easy example) ... val someThing: SomeThing = ... var htmlString = &quot;&quot; htmlString = htmlString + &quot;&lt;p&gt;Name:&lt;b&gt;&quot; + someThing.name + &quot;&lt;/b&gt;&quot; htmlString = htmlString + &quot;&lt;ul&gt;&quot; for(i &lt;- (0 until someThing.count)) { htmlString = htmlString + &quot;&lt;li&gt;&quot; + i + &quot;&lt;/li&gt;&quot; } htmlString = htmlString + &quot;&lt;/ul&gt;&lt;/p&gt;&quot; ... That’s … not … not too horrid. I mean - it’s horrid but for reasons I’ll explain. But if this is all your project needs - fine, you’re done; get on with your life. But what if the count isn’t “enough” for you? Now you need SubThing’s labels printed out instead of a number? class SomeThing ( val name: String, val subThings: Array[SubThing] ) ... val someThing: SomeThing = ... var htmlString = &quot;&quot; htmlString = htmlString + &quot;&lt;p&gt;Name:&lt;b&gt;&quot; + someThing.name + &quot;&lt;/b&gt;&quot; htmlString = htmlString + &quot;&lt;ul&gt;&quot; someThing.subThings.foreach { case subThing =&gt; htmlString = htmlString + &quot;&lt;li&gt;&quot; + subThing.label + &quot;&lt;/li&gt;&quot; } htmlString = htmlString + &quot;&lt;/ul&gt;&lt;/p&gt;&quot; ... 1234567$def someThing: SomeThing &lt;p&gt;Name:&lt;b&gt;$( someThing.name )&lt;/b&gt;&lt;ul&gt;$each someThing.subThings$case subThing&lt;li&gt;$( subThing.label )&lt;/li&gt;$end ShootoutSeveral Scala-based template engines exist. They are more mature and offer better tool support than mine. Mine, however, is statically typed and compiled - performance advantage! predictable W.R.T. line spacing - aesthetic advantage! I am disinclined to use dynamically typed things. When emitting source-code, it’s quite nice to get predictable line spacing since it makes comparisons to expectations easier. Several tools exist, but either don’t handle Scala’s match or insist on writing out XML tags - no good when you want to emit C++/GLSL/Scala source-code. SSP and Twirl both handled match and let me emit text. I worked with them long enough to adopt them before losing my patience. When an SSP template was loaded, it had to be compiled then and there. With several SSP templates several copies of the Scala compiler had to be spun up and set loose on these dynamic constructs. SSP’s line endings were all over the place. Twirl frustrated me in the same way - slow re-testing made development work hard. Spending 65 seconds waiting for a UnitTest to re-run really cuts into your development time. Getting the same results in 4 seconds (or less if using SBT’s daemon) is effectively uninterrupted. I translate a template file into lines, arrange those lines into some trees, then write a .scala file based on those definitions which outputs something meaningful. I used Li Haoyi‘s FastParse for digesting lines themselves - I’m eager to use this tool on more projects. The whole process is pretty quick and SBT’s incremental compiler produces a result from there. I’ve packed my stuff into an SBT plugin and attached it to the compile thing; so it’s ID-10T compliant. ResultsThe driving use was my [ScaD40][hgScaD40] project. A usage example is a 77 line file capable of transforming a case-class/construct-object into a Scala-JS source module. (At the time of this writing - the example has at least one missing case I need to fix) The files (which I write) tend to be mostly control code. My original design was pretty much a translation of Jamon. The current iteration was supposed to be stateless and accept only a single object as a template attribute. This has … sort of fallen away - it’s not interesting to me anymore. I made sub templates and alt templates with semantics related to how they handled the parameters of whatever they were inside. I keep all control expressions on their own lines (always!) which drastically simplifies the process of parsing and constructing the templates. Text lines (or whatever we’re calling the write-stuff-out bits) use simple substitutions reminiscent of Scala’s string interpolation. To avoid any need for parsing Scala - I made ${} $&lt;&gt; and $() work as substitution delimiters. Thus far I haven’t needed to use all three symbols in the “insert text here” chunks. If I had the time, I’d like to add a #pragma like directive to allow swapping which char to use for $ and support $[] and $// as delimiters. Can it help you?"},{"title":"","date":"2017-03-17T10:15:20.135Z","updated":"2017-03-17T10:15:20.135Z","comments":true,"path":"about/index.html","permalink":"http://peterlavalle.com/about/index.html","excerpt":"","text":"I’m Peter. I like to program things. Professional Work I’m a research assistant in the CVL group at the University of Nottingham the CS websites are out of date I’m kind of acting as lead programmer for iBit There’s a ComputerPhile video with a very sleep-deprived-and-not-expecting-interview-today me I worked as a tool-programmer (hurr durr durr) on BigFest for awhile after my MSc I was a server engineer (almost lead technician) for Cabal EU using the alias grigorii.pechorin PublicationsAspects of Development of Computer Games for Therapeutic Purposes12345678@incollection&#123;blanchfield2015aspects, title=&#123;Aspects of Development of Computer Games for Therapeutic Purposes&#125;, author=&#123;Blanchfield, Peter and La Valle, Peter and Nguyen, Tuan and Bradley, Matthew and Liu, Dan&#125;, booktitle=&#123;Creativity in Intelligent Technologies and Data Science&#125;, pages=&#123;748--754&#125;, year=&#123;2015&#125;, publisher=&#123;Springer&#125;&#125; ContributionsI don’t live in a bubble, but I do have a rubbish memory. I remain surprised when I’m credited as a contributor to a FaOS project which I’m using. Listed in alphabetical order are contributions I’ve made to other people’s work. Most are a very-very small number of changes which took more-than-a-little poking around to discern what was wrong and how to fix it. assimp is a (universal? game?) asset translator/importer I submitted some spelling corrections to XML tags. Without the corrections, the XML tags crashed strict XML importers Adjustments to the build system. Let it work on computers without zlib or git installations I corrected some documentation corrections for the binary-format; places where the commenting didn’t reflect the source stb_ttf is a single-header TTF library fixed an actual, honest to goodness bug! TinyWindow is a single-header-library to create and manage an OpenGL window I found and resolved a chicken-or-egg bug with smart-pointers and resource deallocation I submitted some bug fixes, then I went back to GLFW"},{"title":"","date":"2017-04-10T21:15:23.670Z","updated":"2017-04-10T21:15:23.670Z","comments":true,"path":"dot-blog/dukrow.html","permalink":"http://peterlavalle.com/dot-blog/dukrow.html","excerpt":"","text":"DukRow2017-03-21I seem to be missing some of the fields? The “each” method isn’t working for behaviour_test.row.js (started using GitLab to organise issues) https://gitlab.com/g-pechorin/dukrow/issues/1 the variables being set by the script aren’t being saved … because … of … what? the functions are being save just fine, but, the variables aren’t? why aren’t variables being set? 2017-03-20Had a “sick weekend” where I … think that I got “a lot” done … maybe … Much progress implementing, very little written planning, now (sort of) stuck on pushing through encoding with the new system. If I didn’t have unit tests - this would be a nightmare. Seems to be saving most-of the first unit test - yay! Not sure why it’s skipping Suboxone “closure” pushingN pre-args are pushed on the stack; 1234sub.push&lt;const char*&gt;(&quot;arg0-n&quot;)...sub.push&lt;const char*&gt;(&quot;arg0-2&quot;)sub.push&lt;const char*&gt;(&quot;arg0-1&quot;) The “push closure” method is prototype 12template&lt;nUpVals: uint16, argC: uint16, returns: bool&gt;def suboxone::push_closure(code:(suboxone&amp;) =&gt; void) Before the code is executed, the pre-args will be pre-pended to the natural args After the code completes - the top arg will be the result, unless, “FALSE” was passed as the return type The templates are … sort of … a bad idea for code-size Defo take advantage of 0-arg stuff; There will/should be a (shell based?) method pushing thing 12template&lt;T: typename, nUpVals: uint16, argC: uint16, returns: bool&gt;def suboxone::shell&lt;T&gt;::push_method(code:(T&amp;, suboxone&amp;) =&gt; void) This one will wrap the above (I expect) but examine “this” 2017-03-17It looks like it just needs more work to carry on. I copied in scriptie/require() ; seems fine I added extra warnings to the prototype code I changed subspace to be … lighter … am calling it suboxone::subenv(std::function&lt;void(void)&gt;) = I’m up to needing adaptations to the “inhume” module now = I think that I need an inheritance mechanism for vtables so I added an extends function to do extensions and an “extends” function to lookup extensions … maybe there’s something interesting here … 2017-03-16My present troubles are associated with most recent rewriting of everything - I need a stable build soon. Ivan discussed “something” and I think that this framework might make an attractive way to run Haskell-as-a-scripting language or Haskell-as-embeddable; not sure. Both sound like relegating Haskell to a lesser role … which worries me. I like the documentation that I wrote. After creation of scriptie instances - it looks like the registered object … isn’t what I thought? I moved the source code to the new home in a ??/??.cpp.??.hpp file I’m going to try printing kv-pairs and see what’s in the table … looks like the tables are identical in both places … almost like the vtable functions aren’t being added in? = I was using sub.setshell(-1); instead of sub.setshell(-2); - I was assigning the prototype as its own prototype"},{"title":"","date":"2017-03-14T09:33:46.462Z","updated":"2017-03-14T09:33:46.462Z","comments":true,"path":"BENCHMARKS/qham/no-ant-virus.basic.html","permalink":"http://peterlavalle.com/BENCHMARKS/qham/no-ant-virus.basic.html","excerpt":"","text":"Unigine benchmark results body { background: #1a242a; color: #b4c8d2; margin-right: 20px; margin-left: 20px; font-size: 14px; font-family: Arial, sans-serif, sans; } a { } a:link { color: #b4c8d2; } a:active { color: #ff9900; } a:visited { color: #b4c8d2; } a:hover { color: #ff9900; } h1 { color: #ff9900; font-size: 36px; text-align: center; } h2 { text-align: center; font-size: 24px; } h3 { color: #ffffff; text-align: center; } .right { text-align: right; } div.orange { color: #ff9900; } div.highlight { color: #ffffff; } div.engine { margin-top: 50px; text-align: center; } div.copyright { margin: 10px; text-align: center; } table.result { border: 0px; margin-left: auto; margin-right: auto; } table.result td { border: 0px; padding: 3px; font-size: 200%; } table.detail { border: 1px solid #b4c8d2; border-collapse: collapse; margin-left: auto; margin-right: auto; } table.detail td { border: 1px solid #b4c8d2; padding: 3px; } Unigine Heaven Benchmark 4.0 FPS:20.4 Score:514 Min FPS:6.4 Max FPS:45.7 System Platform:Windows 7 (build 7601, Service Pack 1) 64bit CPU model:AMD Phenom(tm) II X4 840 Processor (3210MHz) x4 GPU model:AMD Radeon HD 6700 Series 15.200.1062.0 (1024MB) x1 Settings Render:Direct3D9 Mode:1920x1080 2xAA fullscreen PresetCustom QualityMedium Tessellation:Disabled Powered by UNIGINE Engine Unigine Corp. &copy; 2005-2013"},{"title":"","date":"2017-03-14T09:33:46.462Z","updated":"2017-03-14T09:33:46.462Z","comments":true,"path":"BENCHMARKS/qham/no-ant-virus.extreme.html","permalink":"http://peterlavalle.com/BENCHMARKS/qham/no-ant-virus.extreme.html","excerpt":"","text":"Unigine benchmark results body { background: #1a242a; color: #b4c8d2; margin-right: 20px; margin-left: 20px; font-size: 14px; font-family: Arial, sans-serif, sans; } a { } a:link { color: #b4c8d2; } a:active { color: #ff9900; } a:visited { color: #b4c8d2; } a:hover { color: #ff9900; } h1 { color: #ff9900; font-size: 36px; text-align: center; } h2 { text-align: center; font-size: 24px; } h3 { color: #ffffff; text-align: center; } .right { text-align: right; } div.orange { color: #ff9900; } div.highlight { color: #ffffff; } div.engine { margin-top: 50px; text-align: center; } div.copyright { margin: 10px; text-align: center; } table.result { border: 0px; margin-left: auto; margin-right: auto; } table.result td { border: 0px; padding: 3px; font-size: 200%; } table.detail { border: 1px solid #b4c8d2; border-collapse: collapse; margin-left: auto; margin-right: auto; } table.detail td { border: 1px solid #b4c8d2; padding: 3px; } Unigine Heaven Benchmark 4.0 FPS:7.8 Score:197 Min FPS:3.6 Max FPS:18.9 System Platform:Windows 7 (build 7601, Service Pack 1) 64bit CPU model:AMD Phenom(tm) II X4 840 Processor (3210MHz) x4 GPU model:AMD Radeon HD 6700 Series 15.200.1062.0 (1024MB) x1 Settings Render:Direct3D11 Mode:1920x1080 8xAA fullscreen PresetCustom QualityUltra Tessellation:Extreme Powered by UNIGINE Engine Unigine Corp. &copy; 2005-2013"},{"title":"","date":"2017-03-14T09:33:46.462Z","updated":"2017-03-14T09:33:46.462Z","comments":true,"path":"BENCHMARKS/qham/sophos.basic.html","permalink":"http://peterlavalle.com/BENCHMARKS/qham/sophos.basic.html","excerpt":"","text":"Unigine benchmark results body { background: #1a242a; color: #b4c8d2; margin-right: 20px; margin-left: 20px; font-size: 14px; font-family: Arial, sans-serif, sans; } a { } a:link { color: #b4c8d2; } a:active { color: #ff9900; } a:visited { color: #b4c8d2; } a:hover { color: #ff9900; } h1 { color: #ff9900; font-size: 36px; text-align: center; } h2 { text-align: center; font-size: 24px; } h3 { color: #ffffff; text-align: center; } .right { text-align: right; } div.orange { color: #ff9900; } div.highlight { color: #ffffff; } div.engine { margin-top: 50px; text-align: center; } div.copyright { margin: 10px; text-align: center; } table.result { border: 0px; margin-left: auto; margin-right: auto; } table.result td { border: 0px; padding: 3px; font-size: 200%; } table.detail { border: 1px solid #b4c8d2; border-collapse: collapse; margin-left: auto; margin-right: auto; } table.detail td { border: 1px solid #b4c8d2; padding: 3px; } Unigine Heaven Benchmark 4.0 FPS:20.5 Score:516 Min FPS:10.8 Max FPS:44.9 System Platform:Windows 7 (build 7601, Service Pack 1) 64bit CPU model:AMD Phenom(tm) II X4 840 Processor (3210MHz) x4 GPU model:AMD Radeon HD 6700 Series 15.200.1062.0 (1024MB) x1 Settings Render:Direct3D9 Mode:1920x1080 2xAA fullscreen PresetCustom QualityMedium Tessellation:Disabled Powered by UNIGINE Engine Unigine Corp. &copy; 2005-2013"},{"title":"","date":"2017-03-14T09:33:46.472Z","updated":"2017-03-14T09:33:46.472Z","comments":true,"path":"BENCHMARKS/qham/sophos.extreme.html","permalink":"http://peterlavalle.com/BENCHMARKS/qham/sophos.extreme.html","excerpt":"","text":"Unigine benchmark results body { background: #1a242a; color: #b4c8d2; margin-right: 20px; margin-left: 20px; font-size: 14px; font-family: Arial, sans-serif, sans; } a { } a:link { color: #b4c8d2; } a:active { color: #ff9900; } a:visited { color: #b4c8d2; } a:hover { color: #ff9900; } h1 { color: #ff9900; font-size: 36px; text-align: center; } h2 { text-align: center; font-size: 24px; } h3 { color: #ffffff; text-align: center; } .right { text-align: right; } div.orange { color: #ff9900; } div.highlight { color: #ffffff; } div.engine { margin-top: 50px; text-align: center; } div.copyright { margin: 10px; text-align: center; } table.result { border: 0px; margin-left: auto; margin-right: auto; } table.result td { border: 0px; padding: 3px; font-size: 200%; } table.detail { border: 1px solid #b4c8d2; border-collapse: collapse; margin-left: auto; margin-right: auto; } table.detail td { border: 1px solid #b4c8d2; padding: 3px; } Unigine Heaven Benchmark 4.0 FPS:7.6 Score:192 Min FPS:4.2 Max FPS:18.2 System Platform:Windows 7 (build 7601, Service Pack 1) 64bit CPU model:AMD Phenom(tm) II X4 840 Processor (3210MHz) x4 GPU model:AMD Radeon HD 6700 Series 15.200.1062.0 (1024MB) x1 Settings Render:Direct3D11 Mode:1920x1080 8xAA fullscreen PresetCustom QualityUltra Tessellation:Extreme Powered by UNIGINE Engine Unigine Corp. &copy; 2005-2013"}],"posts":[{"title":"OpenVPN on a Pi3","slug":"OpenVPN-on-a-Pi3","date":"2017-03-14T00:00:00.000Z","updated":"2017-04-10T17:30:18.384Z","comments":true,"path":"2017/03/14/OpenVPN-on-a-Pi3/","link":"","permalink":"http://peterlavalle.com/2017/03/14/OpenVPN-on-a-Pi3/","excerpt":"","text":"&gt; In the wake of H.J.Res.86 I’d like to point out that a VPN hosted at your house WILL NOT help you. These instructions show you how to browse from your home, when you’re somewhere else. Unless your home is outside of the USA, this does nothing to help defend you against H.J.Res.86 … still useful for my work though Have I mentioned that I own a Pi3? Well … this is how I use the Pi3 as an OpenVPN server to remotely work on my home network. This (anecdotal) post comprises a background summary of what OpenVPN does details of how I ran-the-script notes on what I had to do to connect speculation on when I’d want this BackgroundVirtual Private Networks (hereafter VPNs) refer to a client-server system where a client uses an existing network to route all of its traffic through a server. The advantage is that, if the client is in an insecure location (Bar!) they can access resources (build servers!) that no sane person would expose to the public internet. Also; if the client is in a country with draconian laws, (or a poor NetFlix catalog) but the server is in a more enlightened region; the setup allows someone to masquerade as being in the other location. My chief interest is in being able to access BitBucket/Jenkins/GitLab/GitHub/Kallithea et al when I’m in a coffee shop. There’s a mountain of tweaks and voodoo that you can setup as well for this - but it’s beyond my interest in this case. VPN on the Pi3I have a Raspberry Pi3 with Jesse-Lite installed - so I was all set for these instructions. The script worked as described, my only deviation was sending the traffic through TCP port 80. (I don’t know what I’m doing, but I do know that UDP didn’t work) In the real world, you should never ever run a script from the internet without checking it. Following the setup of the server software, I logged into my (podunk) router and directed the FireWall to assign port 80 to my Pi3, and to use a static IP for the Pi3. Pretty standard router stuff which never follows a standard UI - so I’m not posting mine here. VPN Client on my Ubuntu laptopOn my Pi3 - I used the new pivpn add command to create a new VPN … account? This popped out a single config file - very nice - which I copied to my laptop. Likely - there will be GUI/system-tray clients for Windows and OsX; in Linux land we use shells. I have a (pokey) Ubuntu-Mate laptop; go me! Installing the OpenVPN software was a matter of sudo apt-get install openvpn to get it. The final step was to actually connect. Based on this StackOverflow post the command is `sudo openvpn --config ~/ovpn/ppeters-shiny-pi3-vpn.ovpn with ~/ovpn/ppeters-shiny-pi3-vpn.ovpn being the path to the config file which I copied to my laptop. I was able to test this by accessing my Jenkins server after tethering my laptop to my cellular phone, but your local Wetherspoon’s would be a better place to check. Do AgainIf you’re from a dystopian future - I’ve dumped a copy of the setup script to accompany this post. If I find myself in a small group with a need for a VPN again - I’d advocate this approach; the £35 Pi3 with a £10 microSD is a very quick solution for this work. There are probably other roles that a Pi server can fulfill for a small shop that needs their tools to be on-site. Anyway … Happy Birthday to me I guess …","categories":[],"tags":[{"name":"raspberry-pi","slug":"raspberry-pi","permalink":"http://peterlavalle.com/tags/raspberry-pi/"},{"name":"Pi3","slug":"Pi3","permalink":"http://peterlavalle.com/tags/Pi3/"},{"name":"OpenVPN","slug":"OpenVPN","permalink":"http://peterlavalle.com/tags/OpenVPN/"}]},{"title":"ReHexo 2017","slug":"ReHexo-2017","date":"2017-03-02T00:00:00.000Z","updated":"2017-03-17T10:15:20.125Z","comments":true,"path":"2017/03/02/ReHexo-2017/","link":"","permalink":"http://peterlavalle.com/2017/03/02/ReHexo-2017/","excerpt":"","text":"Due to … PEBCAK … my Hexo blog stopped working for long enough that I recreated it. Re-CreationI setup a “new” Hexo blog with the Hueman theme based on the links below; https://hexo.io/ https://github.com/ppoffice/hexo-theme-hueman/wiki/Installation … which led me to run the following commands on my workstation … 1234567891011npm install hexo-cli -ghexo init ./npm installrmdir /s themes\\landscapegit clone https://github.com/ppoffice/hexo-theme-hueman.git themes/hueman&gt;&gt; edit `_config.yaml` theme: huemannpm install -S hexo-generator-json-contentcopy themes\\hueman\\_config.yml.example themes\\hueman\\_config.ymlhexo server It all worked, so I then committed it (and this post) to Mercurial. There was some error about hexo-generator-json-content which doesn’t seem to matter Import and ConfigurationI was able to import the “old” blog content by copying it into the new blog’s folder. I copied all of my source/ except hello-world.md - I kept the new one but added the original post-date. With non-trivial content, I started going through hueman’s configuration manual. My concerns were; Hueman’s menu system baffles me and doesn’t seem to do what I want (yet) Disqus reported an error but worked fine when I came back later Analytics may be setup … I’m not sure at the moment … likely due to a lack of traffic PublishingHexo blogs can be published to git through the deploy section int he top-level configuration file. 1234deploy: type: git repo: git@github.com:g-pechorin/g-pechorin.github.io.git branch: master I use a Jenkins job to publish mine to GitHub pages, the Jenkins script looks like this; 123456cd peterlavalle.com-2017/npm installnpm install -S hexo-generator-json-contentnpm install hexo-deployer-git --savehexo generatehexo deploy … so … that’s all for now I guess.","categories":[],"tags":[]},{"title":"GitHub Pages Publish","slug":"GitHub-Pages-Publish","date":"2017-01-19T00:00:00.000Z","updated":"2017-03-17T10:15:20.115Z","comments":true,"path":"2017/01/19/GitHub-Pages-Publish/","link":"","permalink":"http://peterlavalle.com/2017/01/19/GitHub-Pages-Publish/","excerpt":"","text":"GitHub pages allow a GitHub repository to function as a web-server thing. … whatevs … create a repository on GitHub I created game-SpaceShips at git@github.com:g-pechorin/game-SpaceShips.git run these from the root; 1234567rm -dfr .gitgit initgit checkout -b gh-pagesgit add .git commit -m &quot;some stuffff or what&quot;git remote add origin git@github.com:g-pechorin/game-SpaceShips.gitgit push -f origin gh-pages enjoy!","categories":[],"tags":[{"name":"howtos","slug":"howtos","permalink":"http://peterlavalle.com/tags/howtos/"},{"name":"git","slug":"git","permalink":"http://peterlavalle.com/tags/git/"},{"name":"GitHub","slug":"GitHub","permalink":"http://peterlavalle.com/tags/GitHub/"}]},{"title":"Single Header Bullet","slug":"oth-Bullet","date":"2017-01-09T00:00:00.000Z","updated":"2017-03-17T10:15:20.125Z","comments":true,"path":"2017/01/09/oth-Bullet/","link":"","permalink":"http://peterlavalle.com/2017/01/09/oth-Bullet/","excerpt":"","text":"What?I reduced Bullet 2.83 to a single C++ header file. Why?Largely to see if I could … hey - SQLite say a 5% - 10% speed boost when they did this right? … oh - and to ease adoption I guess … maybe … How?I used a slightly complicated Scala script that I’m not interested in examining again … for now … Basically; I took the 2.83 stripped variant of Bullet and used a Scala program to digest it. I walked all of the files following the preprocessor #include commands while sprinkling #line directives into place to keep the line numbers correct. I had to force a few bits to happen in a specific order, and there were some trivial functions (two I think) that were declared twice, but I think that it worked. I certainly passed a “hello world” Bullet test … so it worked for my woefully inadequate testing. Who?Anyone who adheres to Sean Barret‘s philosophies may be amused by this. Now?I’d like to have a smaller version of Bullet to work with. Smaller footprint, no serialisation, drop the aligned allocators, remove as much virtual as possible. … but definitely, keep the option to use double … cause … y’know ; VR!","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://peterlavalle.com/tags/C/"},{"name":"sorrynotsorry","slug":"sorrynotsorry","permalink":"http://peterlavalle.com/tags/sorrynotsorry/"},{"name":"one-true-header","slug":"one-true-header","permalink":"http://peterlavalle.com/tags/one-true-header/"},{"name":"BulletPhysics","slug":"BulletPhysics","permalink":"http://peterlavalle.com/tags/BulletPhysics/"}]},{"title":"Peter's Awesome Lua with the Core functionality we care about","slug":"oth-PALua-Core","date":"2017-01-08T00:00:00.000Z","updated":"2017-03-17T10:15:20.125Z","comments":true,"path":"2017/01/08/oth-PALua-Core/","link":"","permalink":"http://peterlavalle.com/2017/01/08/oth-PALua-Core/","excerpt":"","text":"TL:DR ; results DukTape is a C engine for executing ECMAScript 5.1ish. (… or JavaScript or whatever we’re calling it this week) Notably, it’s distributed as a trio of source files to ease integration. Lua is a C script engine (for the Lua languages) and is not distributed in such a nice way. So I spent a few hours preparing a (Python) script to repack Lua 5.3.3 into a single header. (By the time I fix my blog posting stuff 5.3.4 will probably be out) Merry (belated) Christmas! Why would you do this?Mostly to conform to Sean Nothings Barret’s constraints. Who would care?Anyone who wants to slap (somewhat) minimal Lua into a project and see what happens. How did you do this?I used a python 3.5.1 script to crack open the .tar.gz file, scan the Makefile, then concatenate sources as needed I scan for some test cases that you (obviously) won’t have - sorry You’ll need a .c (not .cpp … sorrynotsorry) file for Lua to actually compile … so there’s that. … my tests are written in .cpp though … as is the Catch unit testing framework … I used a regex and POSIX line endings to get the whole thing under 1MB so that KDiff likes it … hopefully, future updates won’t break this","categories":[],"tags":[{"name":"Lua","slug":"Lua","permalink":"http://peterlavalle.com/tags/Lua/"},{"name":"sorrynotsorry","slug":"sorrynotsorry","permalink":"http://peterlavalle.com/tags/sorrynotsorry/"},{"name":"one-true-header","slug":"one-true-header","permalink":"http://peterlavalle.com/tags/one-true-header/"}]},{"title":"PAL-System","slug":"PALSystem","date":"2016-11-12T00:00:00.000Z","updated":"2017-03-17T10:15:20.125Z","comments":true,"path":"2016/11/12/PALSystem/","link":"","permalink":"http://peterlavalle.com/2016/11/12/PALSystem/","excerpt":"","text":"Lindenmayer Systems allow one to specify a series of replacement rules for transforming strings. If the text is used as a series of drawing commands, including saving and restoring the cursor’s position, the technique can generate fairly interesting foliage. A scene graph offers the ability to save/restore by chaining segments together. I used Unity3D’s ScriptableObject to create “Languages“ with replacement rules. I also created “Dictionaries“ mapping symbols to segments made from GameObject prefabs. Finally, I explicitly marked a node in the segment as being the Leaf to which any successive stuff should be attached. By allowing multiple overlapping rules, I let the system show a lot of variances. I added “Soar“ mutilators to tweak the spawned things and show some more variance. By tweaking the “seed” value with the world position, I ended up with something that could use the same prefab to produce a whole forest of trees. Overall I’m happy to move forward with this as a tool for filling in my own virtual forests. I think that it needs some work on the “usability” and could stand to take some lessons from Unity3D’s built-in tree system. Seems pretty good for a Saturday afternoon bit of messing about","categories":[],"tags":[{"name":"MadeWithUnity","slug":"MadeWithUnity","permalink":"http://peterlavalle.com/tags/MadeWithUnity/"},{"name":"Procedural Generation","slug":"Procedural-Generation","permalink":"http://peterlavalle.com/tags/Procedural-Generation/"}]},{"title":"Vive Cane","slug":"Vive-Cane","date":"2016-09-04T00:00:00.000Z","updated":"2017-03-14T09:33:46.652Z","comments":true,"path":"2016/09/04/Vive-Cane/","link":"","permalink":"http://peterlavalle.com/2016/09/04/Vive-Cane/","excerpt":"","text":"I’m still alive just … busy, not bloggy … maybe someday I’ll be more bloggy. Here’s something that kept me busy … Teleporting everywhere feels wrong, so my suggestion is to use the Vive wand like a cane. Two minutes feels a bit long, but here’s a video showing it off. More or less; when you grip the/a wand - your avatar is planting a cane in the world from which you can push yourself. When the grip is held - I constantly offset the “foot” of the avatar and I can ensure that the wand’s (in game) position (in VR) doesn’t change. With two wands, you can crawl around in VR (which CryTek already worked out) which opens some interesting possibilities. At this point … I don’t really have much to say about this, it is what it is - an amusing way to avoid joystick-motion sickness. There’s a handful of honey-dos I’d like to chase down with it but … 9-5, home made pizzas, social life, StarCraft’s Co-Op, and my-own build tool all compete for my attention. If someone is reading this in the future - reach me on Twitter if you have a question or want a follow up.","categories":[],"tags":[{"name":"MadeWithUnity","slug":"MadeWithUnity","permalink":"http://peterlavalle.com/tags/MadeWithUnity/"},{"name":"VR","slug":"VR","permalink":"http://peterlavalle.com/tags/VR/"},{"name":"Vive","slug":"Vive","permalink":"http://peterlavalle.com/tags/Vive/"}]},{"title":"Adding NotePad++ Macros to Atom.io","slug":"Atom-Macros","date":"2016-08-11T00:00:00.000Z","updated":"2017-03-14T09:33:46.612Z","comments":true,"path":"2016/08/11/Atom-Macros/","link":"","permalink":"http://peterlavalle.com/2016/08/11/Atom-Macros/","excerpt":"","text":"I haven’t posted anything in awhile … so here’s how to get Atom.io to get macros that work kind-of-like NotePad++ Install atom-keyboard-macros into Atom. The default keybindings did nothing for me … sorry open your keybindings.cson Hit CTRL+, &gt; click on Keybindings &gt; click on the blue text that says your keymap file paste this wodge into the bottom of your keybindings.cson PRESERVE THE INDENTATION! 123456# almost NotePad++ macros for Atom.io!# based on https://github.com/JunSuzukiJapan/atom-keyboard-macros&apos;atom-text-editor&apos;: &apos;ctrl-shift-r&apos;: &apos;atom-keyboard-macros:start_kbd_macro&apos; &apos;ctrl-alt-r&apos;: &apos;atom-keyboard-macros:end_kbd_macro&apos; &apos;ctrl-shift-p&apos;: &apos;atom-keyboard-macros:call_last_kbd_macro&apos; there is no step 4","categories":[],"tags":[{"name":"howtos","slug":"howtos","permalink":"http://peterlavalle.com/tags/howtos/"}]},{"title":"Mirroring Git/GitHub to Hg/BitBucket","slug":"Mirroring-GitHub-to-BitBucket","date":"2016-07-22T00:00:00.000Z","updated":"2017-03-17T10:15:20.125Z","comments":true,"path":"2016/07/22/Mirroring-GitHub-to-BitBucket/","link":"","permalink":"http://peterlavalle.com/2016/07/22/Mirroring-GitHub-to-BitBucket/","excerpt":"","text":"This seemed a lot longer when I planned it in my notebook at lunch. GitHub user project (both sides) BitBucket user SCM Schedule ocornut imgui g-pechorin None Periodic Install hg-git You’ll have to do this on the Jenkins server You’ll have to do it either for the Jenkins user or all I’m using an OsX machine as my host, so I was able to use easy_install to install hg-git and dulwich setup a project on GitHub create a Jenkins Freestyle project which runs periodically Polling the SCM was NOT an option since there’s no default branch on GitHub … this is a quirk of hg-git … I think … IIRC/YRMV - so sling me a tweet or whatever if I’m wrong program the job to pull from git, push to hg, and ignore results of 1 this was only elaborate because I needed it to not fail when there were no changes123456789101112131415161718192021#!/bin/bashif [ -d &quot;imgui&quot; ]; then echo &quot;Re-Using ImGUI&quot; cd imgui hg pull git+ssh://git@github.com:ocornut/imgui.gitelse echo &quot;Cloning ImGUI&quot; hg clone git+ssh://git@github.com:ocornut/imgui.git cd imguifihg push -f ssh://hg@bitbucket.org/g-pechorin/imguiretcode=$?if [ $retcode -eq 0 ] || [ $retcode -eq 1 ]; then exit 0else exit $retcodefi","categories":[],"tags":[{"name":"howtos","slug":"howtos","permalink":"http://peterlavalle.com/tags/howtos/"},{"name":"git","slug":"git","permalink":"http://peterlavalle.com/tags/git/"},{"name":"mercurial","slug":"mercurial","permalink":"http://peterlavalle.com/tags/mercurial/"}]},{"title":"Mercurial / Hg SubRepos","slug":"Hg-SubRepos","date":"2016-07-19T19:00:00.000Z","updated":"2017-03-17T10:15:20.115Z","comments":true,"path":"2016/07/19/Hg-SubRepos/","link":"","permalink":"http://peterlavalle.com/2016/07/19/Hg-SubRepos/","excerpt":"","text":"I’m still trying to catch up on stuff following Develop. I’ve decided to write a post about my experience(s) switching my work over to SubRepos. I am unaware of the “reason” why they’re considered “bad.” Perhaps it’s a Unix thing? Maybe they don’t work as well as people feel that they should? Whatever I have a (secret) project called “nite-nite/“ in which I use and develop some public-domain headers. I want this public-domain stuff to be … well … public-domain and visible to all. Putting these into a Sub-Repository seemed appropriate, so I started by setting up a separate repository on BitBucket. Following the basic usage I cloned this into my existing working copy and set it up as directed; 123C:\\Users\\peter\\Desktop\\nite-nite&gt;hg clone ssh://hg@bitbucket.org/g-pechorin/pal-public-domainC:\\Users\\peter\\Desktop\\nite-nite&gt;echo pal-public-domain = pal-public-domain &gt; .hgsubC:\\Users\\peter\\Desktop\\nite-nite&gt;hg add .hgsub So far so good right? Well … not so much. The push command won’t work right with the setup we/I just used. The fix is simple, the file .hgsub looks like this … 1pal-public-domain = pal-public-domain … and it needs to look like this … 1pal-public-domain = ssh://hg@bitbucket.org/g-pechorin/pal-public-domain So commit/amend the previous commit and push 12C:\\Users\\peter\\Desktop\\nite-nite&gt;hg commit -m &quot;added public domain stuff&quot;C:\\Users\\peter\\Desktop\\nite-nite&gt;hg push I’m reasonably happy with this. As a bonus, I applied it to my blog and the embedded Unity project can be embedded as the source rather than a binary. Great, now I’ll get on with the actual work of moving those headers into the public-domain project.","categories":[],"tags":[{"name":"howtos","slug":"howtos","permalink":"http://peterlavalle.com/tags/howtos/"},{"name":"mercurial","slug":"mercurial","permalink":"http://peterlavalle.com/tags/mercurial/"}]},{"title":"Stop Motion","slug":"Stop-Motion","date":"2016-06-01T00:00:00.000Z","updated":"2017-03-14T09:33:46.642Z","comments":true,"path":"2016/06/01/Stop-Motion/","link":"","permalink":"http://peterlavalle.com/2016/06/01/Stop-Motion/","excerpt":"","text":"Mother told me to try something different. I made a stop-motion video (mostly to see if I could) with bits I had lying around or withing a 5 minute walk. … also, I wanted to see if I could record “blocked out” storyboards since I’m a crap pose drawing person. I spent £2 on some pipe cleaners and a dopey phone stand. I took the pictures on my phone. I used some bluetack to help posing, pyOpenCV3 to encode the jpegs at 3 FPS, and ffmpeg to reduce the file size so that I could upload it in &lt; 40 minutes. The writeup took about 40 minutes … so maybe I didn’t save much time I think the fella could use some firmer limbs - (maybe pasta tubes?) to make animation easier. I went looking for used-GI-Joe toys to produce storyboards from. I wanted the articulated hips and joints to show things like dudes slouching. With firmer limbs - I’d probably get smoother results … maybe … It also might be good to have a steadier hand when taking the pictures.","categories":[],"tags":[]},{"title":"Dual Hetero Quadro on Heaven","slug":"Dual-Hetero-Quadro-on-Heaven","date":"2016-05-12T00:00:00.000Z","updated":"2017-03-17T10:15:20.115Z","comments":true,"path":"2016/05/12/Dual-Hetero-Quadro-on-Heaven/","link":"","permalink":"http://peterlavalle.com/2016/05/12/Dual-Hetero-Quadro-on-Heaven/","excerpt":"","text":"Literally the punchiest title I could come up with. I’ve been told that heterogeneous GPU setups are ridiculously slower than a single-GPU. This is largely an anecdotal shrug of “hey - a second GPU doesn’t really slow my computer down in any meaningful manner at all!” I’m sure that I did this all wrong and that the GPU is capable of being tweaked into a setting where this all becomes conclusively - the legwork for that isn’t interesting to me so I haven’t done it. TL: DR; A second GPU which doesn’t match up or SLI won’t give you cooties. BackgroundMy workstation came with a NVidia PNY Quadro K600 GPU, which was replaced with a K620. I decided to put the K600 back into my computer as a secondary card and run UniGine Heaven benchmark to see just how slow a third wheel makes it. All tests were carried out at full-screen-exclusive resolution but were otherwise using the Heaven Benchmark’s default settings for their namesake. Stereoscopy was disabled for the non-stereo setting, and I used 3d Vision as UniGine’s the stereo method. For stereo settings, the 3D OpenGL Stereo profile was used with Stereo= Enabled and Display Mode= Generic Active Stereo. StatisticsI really can’t see any reason that a consumer would use this setup - it just amused me. Configuration Detail Setting Stereo Score Frames Per Second Minimum FPS Maximum FPS K620 Extreme Yes 131 5.2 3.5 24.4 K620 Basic Yes 269 10.7 5.2 21.6 K620 Extreme No 281 11.2 7.3 22.5 K620 Basic No 592 23.5 15.0 42.2 K620 + K600 Extreme Yes 131 5.2 3.7 10.0 K620 + K600 Basic Yes 270 10.7 8.2 18.4 K620 + K600 Extreme No 280 11.1 7.2 22.0 K620 + K600 Basic No 591 23.5 14.8 40.5 AnalysisThe relation between the numbers suggests that; the second GPU does kind of slow it down measurably the second GPU doesn’t slow it down noticeably the Dual-GPU is a teensy bit helpful with Stereo rendering, but not quite worth the cost in a real game, I could tell the second GPU to do PhysX work and maybe see some improvement? I may have left some junk running on the desktop during the single-GPU tests, so the difference could be skewed a bit. Regardless; I’m confident that adding the second GPU to this desktop hasn’t sucked up all my PCIe lanes or something silly. Questions; how would this work in an AMD/NVidia mix? (Red/Green) would an x86 OS work any good/evil with x86 benchmark? would something with PhysX really be that different good/evil?","categories":[],"tags":[{"name":"Hardware","slug":"Hardware","permalink":"http://peterlavalle.com/tags/Hardware/"}]},{"title":"Canadian Racing Geese","slug":"Racing-Geese","date":"2016-04-18T00:00:00.000Z","updated":"2017-03-17T10:15:20.125Z","comments":true,"path":"2016/04/18/Racing-Geese/","link":"","permalink":"http://peterlavalle.com/2016/04/18/Racing-Geese/","excerpt":"","text":"I have had several geese charge me - this is a poor approximation. I was quite young and the geese were acclimated to humans, more importantly, they knew how tasty the french fries and clam strips we carried were. I never had a chance, nor will I ever forget. Honking with a bestial hunger, the savage geese charged! Pursing me across the fried clam shop’s parking lot, my mother could only cackle as she scrambled for the camera. To this day - I have not returned to that shop.","categories":[],"tags":[{"name":"humor","slug":"humor","permalink":"http://peterlavalle.com/tags/humor/"}]},{"title":"Bin Plugins / Python 3.5.1","slug":"binplugin-python3.5.1","date":"2016-04-13T00:00:00.000Z","updated":"2017-03-14T09:33:46.652Z","comments":true,"path":"2016/04/13/binplugin-python3.5.1/","link":"","permalink":"http://peterlavalle.com/2016/04/13/binplugin-python3.5.1/","excerpt":"","text":"I was playing with Python’s binary extension system and was impressed with the simplicity. I think that the usage of setup.py encourages a consistent ecosystem … as opposed to the more open conventions used by Java and CLR. (I followed the generic instructions and they worked fine on Windows 8.1 - disregard the hype/hate!) Example on GitHub","categories":[],"tags":[]},{"title":"Samon 2","slug":"Samon-2","date":"2016-03-12T14:22:30.000Z","updated":"2017-03-14T09:33:46.632Z","comments":true,"path":"2016/03/12/Samon-2/","link":"","permalink":"http://peterlavalle.com/2016/03/12/Samon-2/","excerpt":"","text":"I wrote a whole post/blurb in one sitting! Read it here Also; Haoyi made a neat post about Build Tools (I mentioned his work at least once and wanted to be sure I had his deets and URL correct)","categories":[],"tags":[]},{"title":"Hungarian Notation","slug":"Hungarian-Notation","date":"2016-03-02T15:39:37.000Z","updated":"2017-03-17T10:15:20.125Z","comments":true,"path":"2016/03/02/Hungarian-Notation/","link":"","permalink":"http://peterlavalle.com/2016/03/02/Hungarian-Notation/","excerpt":"","text":"In which I pontificate on the subject of Hungarian Notation Hungarian Notation is a contentious topicIt boils down to an ambiguity for the word “type” within English / C++. MicroSfot’s modern style-guide says not to use “Abbreviations and Acronyms” or “Hungarian Notation” - originally Hungarian Notation was a style of abbreviation. I’m going to paraphrase a long blog post by Joel on Software and summarize my thoughts at the end. Story-Time!C-family languages (C/C++, Java. C# JavaScript, Python, etc) have rather “weak” types, things like Haskell and Ada95 have strong types. If you define an integer in Ada95 (for example) you can give it a range of values (1 to 7) or even names (days of the week) to prevent confusion. So you’ll never be able to assign a day-of-the-month (1 to 31) value to a day-of-the-week (1 to 7) variable without a compiler error from Ada95. I’m going to illustrate this with an example of storing the day number as an integer. Charles Simonyi’s idea was that when you created an int day; to store the weekday variable you would use the name int wDay; to denote that the semantic type of this day integer was “week.” They were using “Abbreviations and Acronyms” as a sematic-type on their variables The IT managers who set policy didn’t understand the difference between semantic type (the meaning of the data) and storage type (the mechanical storage of the data) but knew Simonyi’s team was working better and the “type” as a prefix to their variables. So the convention became “thou musteth prefixth thine variable names with their types” for a long time. I think that this was before IntelliSense and CodeCompletion were practical - error checking took a long time and this misinterpreted version of Hungarian Notation did help. My guess would be that IntelliSense and CodeCompletion came along and the practice became a redundant chore so it was abandoned mostly. Peter’s AdviceTo get the best of both worlds (and still look clever) name your int day; as dayOfWeek / dayOfMonth so that things like … 123456789101112...// day of month will be between 0 and 30 (or 1 and 31)result-&gt;dayOfMonth = weekDay;...// &quot;day of week&quot; will be between 0 and 7// &quot;day of year&quot; will be between 0 and 365 (or 1 and 366)int dayOfWeek = (dayOfYear + 1) % 7;... … will look more wrong and stick out when you’re debugging. Certainly better than; 12// What is this?result-&gt;iDayWhichMightBeSomething = iDayWhichIsSomething;","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://peterlavalle.com/tags/C/"}]},{"title":"Space Ships","slug":"Space-Ships","date":"2016-03-01T00:00:00.000Z","updated":"2017-03-17T10:15:20.125Z","comments":true,"path":"2016/03/01/Space-Ships/","link":"","permalink":"http://peterlavalle.com/2016/03/01/Space-Ships/","excerpt":"","text":"Awhile ago I undertook a goofy little “game-play study” with space ships. It has space ships I’m calling it Space-Ships. I wanted to see if 2D game-play (like S.P.A.Z.) could “feel” like traditional 3D. (like Freelancer) To study this I built a game-play prototype with a 2.5D chase-cam in (Unity) a 3D game engine. I used engine’s existing rigid body simulator (PhysX) to provide a limited version of physics. After constraining everything to a 2D plane and fiddling with the inertia values in various ways I was happy with the flight mechanics. I made a doo-dad generator to setup and teardown an infinite (not quite) random set of space junk - amusingly this reduced disorientation with the slight tradeoff of vague motion sickness. I created some guns and a dumb AI ship that flew in circles until e saw something and started shooting at it. Even when constrained to a 2D plane, the “accurate” dynamics simulation annoyed me. Momentum became an obstacle when I wanted to rapidly change directions to pursue another ship. My I changed the ships to get a lot of “inertia” when the controls weren’t being used - take your foot off the gas and you start to slow down. (It wasn’t actually inertia - it was “drag” … I think the manuals call it inertia … which is going to bug me now) Hunting down other ships was amusing, but the core of the game-play literally felt shallow I think that it would work for PvP style game-play, or as a sugary layer over any game with a meta-strategy system - but I’d worry about trying to make a game out of just shooting other ships. The lack of height variation limits the size of ships a bit so doesn’t lend itself to sweeping space-opera drama without big triangular ships looming over the audience’s view. I don’t consider the technical aspects especially interesting - however, I’ll outline them for the purpose of self-promotion. The project allowed me to go nuts with extending the UnityEditor - an experience that I’m happy to repeat. Unity’s Editor is the real star of Unity - adding extra shiny-bits in the SceneView is relatively easy, and extending or replacing the inspectors to give each script its own special arrangement of buttons doesn’t take much thought. The most delightful of this was using a drop-down menu to assign string values (parsed from ProjectSettings/Inputmanager.asset) to controls that had to read from Input.Get??(...) - a trick that I’m surprised I haven’t seen this sort of thing in Unity proper. (It’s too cool to be a new discovery, though … also it relies on using forced text asset serialization) At a higher level - I experimented with a sort of “detached manipulator pattern” to decouple functionality without relying on inheritance. The spaceship’s engines and guns were MonoBehaviour classes with public variables to control whether they were firing or pushing or whatever. The player’s ship and the AI ships both had an additional MonoBehaviour class that grabbed these scripts and set the values as their logic needed to. The player (of course) set the openFire field to the value of UnityEngine.Input.GetButton(...) on Update(). The AI ship used a trigger volume pointing forwards and “fired” whenever something which could be destroyed moved into that volume. While the pilot scripts were coupled to the flight system, the flight systems weren’t coupled to the pilots. This had the unexpected benefit of making it possible to “fly by inspector” and debug things that weren’t quite right. For the moment I’m happy with this as a sort of “game-play study.” I’m not especially interested in carrying out more work on it at this point, but I’m not nearly as put off the idea as I would expect. I was able to try out various technical approaches and feel that while it’s not “done” it’s a decent RoI for the weeknights and weekend I spent on it. Maybe someday I’ll add multi-player …. or maybe I’ll try out a 2D isometric adventure. … did I mention that there are SPACESHIPs!","categories":[],"tags":[{"name":"Unity","slug":"Unity","permalink":"http://peterlavalle.com/tags/Unity/"},{"name":"GamePlay","slug":"GamePlay","permalink":"http://peterlavalle.com/tags/GamePlay/"},{"name":"SpaceShips","slug":"SpaceShips","permalink":"http://peterlavalle.com/tags/SpaceShips/"}]},{"title":"Automated Unity WebGL Deployment","slug":"mySpaceShips","date":"2016-02-26T00:00:00.000Z","updated":"2017-03-14T09:33:46.652Z","comments":true,"path":"2016/02/26/mySpaceShips/","link":"","permalink":"http://peterlavalle.com/2016/02/26/mySpaceShips/","excerpt":"","text":"I have an old Unity project that I haven’t looked at in awhile - this one. If memory serves; assembling a WebGL version is slow and boring - so I’m making my eager little Jenkins server do it. Really I’m a bit bored with sbt-launch malarkey and I wanted to see if I could get this rolling. Broadly the steps that I followed went like this; Install Unity (5.3.3) with WebGL modules 5.3.3’s WebGL stuff has improved since I last checked Build the whole tootin thing by hand (on your workstation) This never works on the first try - better to do it locally A custom build script was involved but many snags later it lives! Validate WebGL player file:// isn’t enough boyo; you need http:// to play your game … actually ; NW.js can open the local page as if it’s a real-boy … y’know, this suggests some interesting options with desktop applications and Unity Build by hand (again) on the CI server I needed to reinstall Unity5.3.3 to get the trimmings I wanted I also needed to make a build script BB8ild (script is below) my CI server is slow so I wanted to iron out slow problems before I started picking at it here still need to set it up for CI stuff Configure Jenkins to assemble and post the project This was more complex than I had anticipated I needed to cd around and run a variety of tasks (script is below) In the end - I cloned and pushed the whole site … and hoped for the best Jenkins TaskSome paths were changed for security-via-obscurity; this won’t literally work but if run line-by-line and changed as you go you’ll get there. 123456789101112131415161718cd mySpaceShips/Applications/Unity/Unity.app/Contents/MacOS/Unity -batchmode -nographics -quit -executeMethod BB8ild.PerformBuildcd build/rm -dfr peter-lavalle.github.io/hg clone git+ssh://git@github.com:peter-lavalle/peter-lavalle.github.io.gitrm -dfr peter-lavalle.github.io/assets/mySpaceShips/mkdir -p peter-lavalle.github.io/assets/mySpaceShips/mv ./web-gl/* ./peter-lavalle.github.io/assets/mySpaceShipscd peter-lavalle.github.io/hg add .hg commit -m \"$BUILD_TAG\"hg pushcd ..rm -dfr peter-lavalle.github.io/rm -dfr web-gl/cd ..rm -dfr build/rm -dfr Library/ Unity BB8ild build scriptThis’ll work as-is 1234567891011121314151617using UnityEditor;class BB8ild&#123; [MenuItem(\"Build/Build WebGL\")] static void PerformBuild() &#123; var sceneSettings = EditorBuildSettings.scenes; string[] scenePaths = new string[sceneSettings.Length]; for (int i = 0; i &lt; scenePaths.Length; ++i) &#123; scenePaths[i] = sceneSettings[i].path; &#125; BuildPipeline.BuildPlayer(scenePaths, \"build/web-gl\", BuildTarget.WebGL, BuildOptions.None); &#125;&#125;","categories":[],"tags":[{"name":"howtos","slug":"howtos","permalink":"http://peterlavalle.com/tags/howtos/"},{"name":"Jenkins","slug":"Jenkins","permalink":"http://peterlavalle.com/tags/Jenkins/"},{"name":"Unity","slug":"Unity","permalink":"http://peterlavalle.com/tags/Unity/"}]},{"title":"Hexo and Jenkins atop Os X","slug":"Hexo-Os-X","date":"2016-02-10T00:00:00.000Z","updated":"2017-03-17T10:15:20.115Z","comments":true,"path":"2016/02/10/Hexo-Os-X/","link":"","permalink":"http://peterlavalle.com/2016/02/10/Hexo-Os-X/","excerpt":"","text":"In which I ramble a bit about setting up CI for this very blog. I have a Jenkins server running on my OsX computer. (… or … I’m setting one up anyway) I also have (am establishing?) a blog built by Hexo … because that seems the right way to do this sort of thing. My constraints of “MarkDown“ and “no really - let me use MarkDown because I’m going to have a lot of code fragments” seem alien to most blogging software - “Hexo delivers” as the kids say. I knew that this would all work from a command line on the computer and a command line on my Windows 7 PC. After a bunch of chewing - I’ve scrawled this post in victory as a sort of test. NPM setupHexo is built in Node.JS. I installed it and played about with it as I was instructed. 12npm install hexonpm install hexo-generator-sitemap --save After installing Node.JS I encountered various errors and I switching to a stable version of NPM. (… which I thought I had already used but … I guess not) 1npm -g install npm This was discussed here but may be irrelevant. The BuildI setup Jenkins to poll (and pull) my repository at H/15 * * * *. I had already setup a Hexo site and configured it to deploy to GitHub pages. (… which incidentally don’t seem to do anything interesting for you with Jekyll AFAIK) The “secret” to this recipe seemed to be that the Jenkins build seems to require installing Hexo itself to work. Not just npm install in the folder but full-on npm install hexo et al. This seems odd to me but it’s what worked … but this is a CI server so longish builds are fine with me. I used four steps, each a shell command, to perform the generation and deploy the site. The first command installs Hexo. I tried to install it (globally?) with -g but encountered a security exception. 1npm install hexo The second command installs a sitemap plugin that should make my site reachable from Google-like crawlers 1npm install hexo-generator-sitemap --save The third command … installs … the site? This may be redundant but I’m not interested in going through a “change” &gt; “reboot” &gt; “check” cycle to learn that I’ve broken my configuration. 1npm install The fourth command actually generates the site and uploads the generated site. It seems odd to me deploy doesn’t implicitly generate the site - but I can take advantage of that, see the Addendum! 1hexo deploy --generate ConclusionSo … yeah … that’s that. This post was the first one that I set to push out through this system. AddendumSo it’s been a few weeks/months and I want to stick generated HTML from somewhere else onto my site. But … Hexo tries to “fill in the blanks” which keeps a consistent CSS and &lt;title&gt; stuff … but breaks my Unity WebGL game. To work around this, I’ve generated the WebGL to an assets/ folder and committed it to the blog’s repository an explanation of this is beyond the scope of this post … I’ll write it up another time split generation and deployment into two steps copied the assets/ folder into the blog’s public/ folder deployed everything as normal The fourth step above is replaced with these three commands; 123hexo generatecp -r assets/* public/hexo deploy … and it works!","categories":[],"tags":[{"name":"howtos","slug":"howtos","permalink":"http://peterlavalle.com/tags/howtos/"},{"name":"Hexo","slug":"Hexo","permalink":"http://peterlavalle.com/tags/Hexo/"},{"name":"Jenkins","slug":"Jenkins","permalink":"http://peterlavalle.com/tags/Jenkins/"}]},{"title":"New Digs","slug":"New-Digs","date":"2016-01-19T20:54:04.000Z","updated":"2017-03-17T10:15:20.125Z","comments":true,"path":"2016/01/19/New-Digs/","link":"","permalink":"http://peterlavalle.com/2016/01/19/New-Digs/","excerpt":"","text":"I am experimenting with Hexo. I do believe it’s much nicer than my old system. So far I’ve setup a basic site, a sitemap generator and it deploys to my existing GitHub pages configuration. Now I’m tweaking themes/ and copying over worthwhile articles from previous blogs! The whole thing weighs in at 480K (or did before I added this sentence) so I’m fighting the Website Obesity Crisis somewhat … right? … I pass the Taft test I think …","categories":[],"tags":[]},{"title":"Swag","slug":"Swag","date":"2015-11-12T00:00:00.000Z","updated":"2017-03-14T09:33:46.642Z","comments":true,"path":"2015/11/12/Swag/","link":"","permalink":"http://peterlavalle.com/2015/11/12/Swag/","excerpt":"","text":"You don’t need members when you’ve got SWAG! Actually … you don’t get many members with this idea. By casting this I can pass around an immutable structure of up-to sizeof(void*) bytes.","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://peterlavalle.com/tags/C/"}]},{"title":"First Post","slug":"First-Post","date":"2015-10-27T00:00:00.000Z","updated":"2017-03-17T10:15:20.115Z","comments":true,"path":"2015/10/27/First-Post/","link":"","permalink":"http://peterlavalle.com/2015/10/27/First-Post/","excerpt":"","text":"Can I use polymorphic-static-templates to automagically wire meta-functions into a Lua allocator? Presently I’m using several “make—” functions to “decorate” objects after allocation and enable get/set/run meta-functions. I keep feeling the “smell” that some esoteric template thingies could be used to make these steps declarative (or maybe automatic!)","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://peterlavalle.com/tags/C/"},{"name":"Lua","slug":"Lua","permalink":"http://peterlavalle.com/tags/Lua/"},{"name":"Template Programming","slug":"Template-Programming","permalink":"http://peterlavalle.com/tags/Template-Programming/"}]},{"title":"Hello World","slug":"hello-world","date":"1983-03-14T00:00:00.000Z","updated":"2017-03-14T09:33:46.652Z","comments":true,"path":"1983/03/14/hello-world/","link":"","permalink":"http://peterlavalle.com/1983/03/14/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}